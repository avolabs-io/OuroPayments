// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Decco = require("decco/src/Decco.js");
var Js_dict = require("bs-platform/lib/js/js_dict.js");
var MongoJs = require("./Mongo.js");

function mongoResult_encode(v) {
  return Js_dict.fromArray([[
                "success",
                Decco.boolToJson(v.success)
              ]]);
}

var connectMongo = MongoJs.MongoConnect;

function recipientDbData_encode(v) {
  return Js_dict.fromArray([
              [
                "recipient",
                Decco.stringToJson(v.recipient)
              ],
              [
                "addressTokenStream",
                Decco.stringToJson(v.addressTokenStream)
              ],
              [
                "lengthOfPayment",
                Decco.intToJson(v.lengthOfPayment)
              ],
              [
                "interval",
                Decco.intToJson(v.interval)
              ],
              [
                "rate",
                Decco.stringToJson(v.rate)
              ],
              [
                "deposit",
                Decco.stringToJson(v.deposit)
              ],
              [
                "numerOfPaymentsMade",
                Decco.intToJson(v.numerOfPaymentsMade)
              ],
              [
                "totalNumberOfPaymentsToMake",
                Decco.intToJson(v.totalNumberOfPaymentsToMake)
              ]
            ]);
}

function recipientDbArray_encode(v) {
  return Decco.arrayToJson(recipientDbData_encode, v);
}

var getStreamss = MongoJs.getStreams;

var deleteStreams = MongoJs.deleteStream;

var testMongo = MongoJs.addStream;

exports.mongoResult_encode = mongoResult_encode;
exports.connectMongo = connectMongo;
exports.recipientDbData_encode = recipientDbData_encode;
exports.recipientDbArray_encode = recipientDbArray_encode;
exports.getStreamss = getStreamss;
exports.deleteStreams = deleteStreams;
exports.testMongo = testMongo;
/* connectMongo Not a pure module */
